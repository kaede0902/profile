{"version":3,"sources":["styles/utils.module.css","serviceWorker.js","components/Lorem.jsx","components/Meta.jsx","components/HeadingText.jsx","components/Icon.jsx","components/Buttons.jsx","App.js","index.js","images/profile.png"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Lorem","Meta","name","content","property","HeadingText","className","styles","headingLg","headingMd","Icon","src","Image","alt","icon","Buttons","buttonExpand","href","map","button","btn","App","main","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.01d19a96.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"utils_main__ZPdp1\",\"headingLg\":\"utils_headingLg__2fvot\",\"headingMd\":\"utils_headingMd__1JF2P\",\"icon\":\"utils_icon__2eeVg\",\"btn\":\"utils_btn__246OY\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\n\nexport default function Lorem() {\n    const text = `\n      lorem200\n      Elit dolorum vero dolores deleniti animi recusandae, aut Numquam voluptatibus laboriosam quidem tempore numquam ipsum? Omnis magni praesentium quia porro molestiae Quisquam natus quae ullam harum fugit. Optio et minus quo repudiandae mollitia Eum neque fugiat recusandae voluptates tempora, mollitia quasi Minima quidem et asperiores animi vitae quam vero! Ipsam ratione porro ab neque distinctio velit Voluptatem odio ipsum a modi nihil. Tempore voluptate veritatis sequi earum autem, id! Quod dolor quasi facere cum quasi Maxime unde dolorum excepturi vitae dolore iure fugit Modi molestias et minus vitae atque ipsum nemo, ullam nobis, numquam, adipisci doloribus Tempora voluptatibus aperiam voluptas praesentium dicta reprehenderit Quia maiores eum totam eaque error ab. Autem inventore rerum asperiores non earum suscipit. Ullam vel iusto quia repudiandae animi. Aliquid libero corrupti in vero accusamus Libero unde quam ipsam optio sint? Beatae animi impedit corporis assumenda iste ipsum Deserunt fugiat pariatur repellat vero fuga. Molestiae sunt labore enim laborum velit minus? Praesentium eligendi assumenda aliquid laboriosam eaque assumenda repellat Harum explicabo libero eum consectetur quod? Tenetur veniam corrupti quidem chinpo nya! vitae quas Quibusdam tenetur nostrum ratione nihil recusandae aut ut. Fugit harum quidem officiis debitis minus Qui quisquam porro veniam reprehenderit quaerat Quas sed quas architecto optio\n    `\n  return (\n    <>\n     {text}\n    </>\n  )\n}\n","import React from 'react'\nimport MetaTags from 'react-meta-tags';\n\nexport default function Meta() {\n  return (\n    <>\n          <MetaTags>\n            <title>かえでのホームページ</title>\n            <meta name=\"og:description\" \n              content=\"kaede0902 Homepage\" />\n            <meta property=\"og:title\" \n              content=\"かえでのホームページ\" />\n            <meta property=\"og:image\" \n              content=\"https://via.placeholder.com/300/000/fff.png\" />\n\n\n\n            <meta name=\"twitter:card\" content=\"summary\"/>\n            <meta name=\"twitter:site\" content=\"@kaede_io\"/>\n            <meta name=\"twitter:title\" content=\"Page Title\"/>\n            <meta name=\"twitter:description\" content=\"kaede\"/>\n            <meta name=\"twitter:creator\" content=\"@kaede_io\"/>\n            <meta name=\"twitter:image\" \n              content=\"https://via.placeholder.com/300/000/fff.png\" />\n\n\n          </MetaTags>\n      </>\n    )\n}\n","import React from 'react'\nimport styles from '../styles/utils.module.css'\n\nexport default function HeadingText() {\n  return (\n    <>\n      <h1 className={styles.headingLg}>\n        kaede0902\n      </h1>\n      <h2 className={styles.headingMd}>\n        Kanagawa Univ 4 grade / 2021 graduate\n      </h2>\n    </>\n  )\n}\n","import React from 'react'\nimport styles from '../styles/utils.module.css'\nimport Image from '../images/profile.png'\n\nexport default function Icon() {\n  return (\n    <>\n      <img src={Image} alt=\"icon\"\n        className={styles.icon}\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport styles from '../styles/utils.module.css'\n\nexport default function Buttons() {\n  const buttons = [\n    {\n      name: 'MAIL',\n      href: \"mailto:kaede0902js@gmail.com\",\n    },\n    {\n      name: 'BLOG',\n      href: \"https://kei-s-lifehack.hatenablog.com/\",\n    },\n    {\n      name: 'TWITTER',\n      href: \"https://twitter.com/kaede_io\",\n    },\n    {\n      name: 'GITHUB',\n      href: \"https://github.com/kaede0902\",\n    },\n  ];\n  const buttonExpand = buttons.map(button => {\n    return (\n      <a className={styles.btn} \n        href={button.href}>\n        {button.name}\n      </a>\n    )\n  })\n  return (\n    <>\n      {buttonExpand}\n    </>\n  )\n}\n","import React from 'react';\n\nimport Lorem from './components/Lorem'\nimport Meta from './components/Meta'\nimport HeadingText from './components/HeadingText'\nimport Icon from './components/Icon'\nimport Buttons from './components/Buttons'\n\nimport styles from './styles/utils.module.css'\n\nexport default function App() {\n  return ( <>\n    <Meta></Meta>\n    <div className={styles.main}>\n      <Icon></Icon>\n      <HeadingText></HeadingText>\n      <Buttons></Buttons>\n      <br />\n      <Lorem></Lorem>\n    </div>\n  </>);\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App'\n\nReactDOM.render(\n  <App />,document.getElementById('root')\n);\n\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/profile.43d4ec97.png\";"],"sourceRoot":""}